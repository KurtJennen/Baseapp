<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping auto-import="true" default-lazy="false">
	<class name="be.luxuryoverdosis.framework.data.to.Document" table="base_document">
		<id name="id" column="Id" type="int" unsaved-value="-1">
			<generator class="identity"></generator>
		</id>
		<version name="version" column="Version" type="int" unsaved-value="negative" />
		<property name="userAdd" column="UserAdd" type="string" not-null="true"></property>
		<property name="userUpdate" column="UserUpdate" type="string" not-null="true"></property>
		<property name="dateAdd" column="DateAdd" type="timestamp" not-null="true"></property>
		<property name="dateUpdate" column="DateUpdate" type="timestamp" not-null="true"></property>
		<property name="type" column="type" type="string"></property>
		<property name="fileName" column="Filename" type="string"></property>
		<property name="file" column="File" type="blob"></property>
		<property name="fileSize" column="Filesize" type="integer"></property>
		<property name="contentType" column="Contenttype" type="string"></property>
	</class>
	
	<query name="getAllDocuments">
		select new be.luxuryoverdosis.framework.data.to.Document(
			d.id,
			d.type,
			d.fileName,
			d.fileSize,
			d.contentType
		)
		from Document d
	</query>
	
	<query name="getAllDocumentsByType">
		from Document d
		where d.type = :type
		order by d.fileName asc
	</query>
	
	<query name="getCountDocumentsByTypeAndFilename">
		select count(*)
		from Document d
		where d.type = :type
		and d.fileName = :fileName
		and d.id != :id
	</query>
</hibernate-mapping>
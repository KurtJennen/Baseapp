<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping auto-import="true" default-lazy="false">
	<class name="be.luxuryoverdosis.framework.data.to.Menu" table="base_menu">
		<id name="id" column="Id" type="int" unsaved-value="-1">
			<generator class="identity"></generator>
		</id>
		<version name="version" column="Version" type="int" unsaved-value="negative" />
		<property name="userAdd" column="UserAdd" type="string" not-null="true"></property>
		<property name="userUpdate" column="UserUpdate" type="string" not-null="true"></property>
		<property name="dateAdd" column="DateAdd" type="timestamp" not-null="true"></property>
		<property name="dateUpdate" column="DateUpdate" type="timestamp" not-null="true"></property>
		<property name="fullName" column="FullName" type="string" not-null="true"></property>
		<property name="name" column="Name" type="string" not-null="true"></property>
		<property name="title" column="Title" type="string" not-null="true"></property>
		<property name="fullLevel" column="FullLevel" type="string" not-null="true"></property>
		<property name="level" column="Level" type="int" not-null="true"></property>
		<property name="hidden" column="Hidden" type="string" not-null="true"></property>
		<property name="disabled" column="Disabled" type="string" not-null="true"></property>
		<property name="forPay" column="ForPay" type="string" not-null="true"></property>
		<property name="payed" column="Payed" type="string" not-null="true"></property>
		
		<many-to-one name="user" column="User_Id" not-null="true" class="be.luxuryoverdosis.framework.data.to.User" lazy="false"></many-to-one>
	</class>
	
	<query name="getMenusByFullNameAndUser">
		from Menu m
		where m.fullName = :fullName
		and m.user.id = :userId
	</query>
	
	<query name="getMenusDtoByUser">
		SELECT new be.luxuryoverdosis.framework.data.dto.MenuDTO(
			m.id,
			m.fullName,
			m.name,
			m.title,
			m.fullLevel,
			m.level,
			m.hidden,
			m.disabled,
			m.forPay,
			m.payed,
			u.id
		)
		from Menu m
		inner join m.user u
		where u.id = :userId
		order by m.fullLevel
	</query>
	
	<query name="getHiddenMenusDtoByUser">
		SELECT new be.luxuryoverdosis.framework.data.dto.MenuDTO(
			m.id,
			m.fullName,
			m.name,
			m.title,
			m.fullLevel,
			m.level,
			m.hidden,
			m.disabled,
			m.forPay,
			m.payed,
			u.id
		)
		from Menu m
		inner join m.user u
		where u.id = :userId
		and m.hidden = :hidden
		order by m.fullLevel desc
	</query>
	
	<query name="getDisabledMenusDtoByUser">
		SELECT new be.luxuryoverdosis.framework.data.dto.MenuDTO(
			m.id,
			m.fullName,
			m.name,
			m.title,
			m.fullLevel,
			m.level,
			m.hidden,
			m.disabled,
			m.forPay,
			m.payed,
			u.id
		)
		from Menu m
		inner join m.user u
		where u.id = :userId
		and m.disabled = :disabled
		order by m.fullLevel desc
	</query>
	
	<query name="getForPayMenusDtoByUserAndPayed">
		SELECT new be.luxuryoverdosis.framework.data.dto.MenuDTO(
			m.id,
			m.fullName,
			m.name,
			m.title,
			m.fullLevel,
			m.level,
			m.hidden,
			m.disabled,
			m.forPay,
			m.payed,
			u.id
		)
		from Menu m
		inner join m.user u
		where u.id = :userId
		and m.forPay = 'J'
		and m.payed = :payed
		order by m.fullLevel desc
	</query>
	
	<query name="deleteMenusByUser">
		delete from Menu m
		where m.user.id = :userId
	</query>
	
	<query name="getCountMenusByUser">
		select count(*)
		from Menu m
		where m.user.id = :userId
	</query>
	
	<query name="getCountMenusByFullNameAndUser">
		select count(*)
		from Menu m
		where m.fullName = :fullName
		and m.user.id = :userId
	</query>
</hibernate-mapping>